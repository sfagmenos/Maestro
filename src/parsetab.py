
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xac\x93\xe5]F\x82z\x80\xb9\x0e(\xfa\xf0\xd7\xdf\xf2'
    
_lr_action_items = {'ADDOP':([1,3,6,9,16,20,21,22,23,25,28,29,32,33,35,],[10,-11,-12,-20,10,-14,-13,-18,-17,-19,10,10,-8,-9,10,]),'RP':([3,6,9,16,20,21,22,23,25,26,27,28,29,30,32,33,35,],[-11,-12,-20,25,-14,-13,-18,-17,-19,32,33,-16,-10,34,-8,-9,-15,]),'LP':([0,2,5,7,8,9,10,11,12,13,14,15,17,18,19,31,36,37,38,39,],[2,2,-3,2,-5,18,2,2,2,2,24,-4,-2,2,2,2,-7,2,2,-6,]),'INT':([0,2,5,7,8,10,11,12,13,15,17,18,19,31,36,37,38,39,],[6,6,-3,6,-5,6,6,6,6,-4,-2,6,6,6,-7,6,6,-6,]),'EACH':([1,3,6,9,20,21,22,23,25,29,32,33,],[14,-11,-12,-20,-14,-13,-18,-17,-19,-10,-8,-9,]),'ASSIGN':([9,],[19,]),'CCURL':([5,8,15,17,36,38,39,],[-3,-5,-4,-2,-7,39,-6,]),'DEP':([1,3,6,9,16,20,21,22,23,25,28,29,32,33,35,],[12,-11,-12,-20,12,-14,-13,-18,-17,-19,12,12,-8,-9,12,]),'OCURL':([34,],[37,]),'COMMA':([3,6,9,20,21,22,23,25,26,28,29,32,33,35,],[-11,-12,-20,-14,-13,-18,-17,-19,31,-16,-10,-8,-9,-15,]),'STR':([0,2,5,7,8,10,11,12,13,15,17,18,19,31,36,37,38,39,],[3,3,-3,3,-5,3,3,3,3,-4,-2,3,3,3,-7,3,3,-6,]),'error':([0,5,7,8,15,17,18,36,37,38,39,],[8,-3,8,-5,-4,-2,27,-7,8,8,-6,]),'SC':([1,3,6,9,20,21,22,23,25,29,32,33,],[15,-11,-12,-20,-14,-13,-18,-17,-19,-10,-8,-9,]),'NODEP':([1,3,6,9,16,20,21,22,23,25,28,29,32,33,35,],[13,-11,-12,-20,13,13,-13,13,-17,-19,13,13,-8,-9,13,]),'ID':([0,2,5,7,8,10,11,12,13,15,17,18,19,24,31,36,37,38,39,],[9,9,-3,9,-5,9,9,9,9,-4,-2,9,9,30,9,-7,9,9,-6,]),'MULOP':([1,3,6,9,16,20,21,22,23,25,28,29,32,33,35,],[11,-11,-12,-20,11,11,-13,11,-17,-19,11,11,-8,-9,11,]),'$end':([4,5,7,8,15,17,36,39,],[0,-3,-1,-5,-4,-2,-7,-6,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'STMTBLOCK':([34,],[36,]),'E':([0,2,7,10,11,12,13,18,19,31,37,38,],[1,16,1,20,21,22,23,28,29,35,1,1,]),'PRGM':([0,],[4,]),'LII':([18,],[26,]),'STMT':([0,7,37,38,],[5,17,5,17,]),'STMTLIST':([0,37,],[7,38,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PRGM","S'",1,None,None,None),
  ('PRGM -> STMTLIST','PRGM',1,'p_program','myacc.py',18),
  ('STMTLIST -> STMTLIST STMT','STMTLIST',2,'p_stmt_list','myacc.py',23),
  ('STMTLIST -> STMT','STMTLIST',1,'p_stmt_list','myacc.py',24),
  ('STMT -> E SC','STMT',2,'p_stmt','myacc.py',32),
  ('STMT -> error','STMT',1,'p_stmt_error','myacc.py',36),
  ('STMTBLOCK -> OCURL STMTLIST CCURL','STMTBLOCK',3,'p_stmt_block','myacc.py',41),
  ('STMT -> E EACH LP ID RP STMTBLOCK','STMT',6,'p_list_loop','myacc.py',45),
  ('E -> ID LP LII RP','E',4,'p_func_call','myacc.py',53),
  ('E -> ID LP error RP','E',4,'p_func_call_error','myacc.py',59),
  ('E -> ID ASSIGN E','E',3,'p_assign','myacc.py',67),
  ('E -> STR','E',1,'p_e_str','myacc.py',75),
  ('E -> INT','E',1,'p_e_int','myacc.py',81),
  ('E -> E MULOP E','E',3,'p_math_op','myacc.py',87),
  ('E -> E ADDOP E','E',3,'p_math_op','myacc.py',88),
  ('LII -> LII COMMA E','LII',3,'p_list_inside_grow','myacc.py',103),
  ('LII -> E','LII',1,'p_list_inside_orig','myacc.py',109),
  ('E -> E NODEP E','E',3,'p_e_nodep','myacc.py',116),
  ('E -> E DEP E','E',3,'p_e_dep','myacc.py',123),
  ('E -> LP E RP','E',3,'p_e_parenthesize','myacc.py',130),
  ('E -> ID','E',1,'p_e_id','myacc.py',135),
]
